// <auto-generated />
using System;
using MVCProject.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MVCProject.Migrations
{
    [DbContext(typeof(ITIContext))]
    [Migration("20240306205042_v1")]
    partial class v1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MVCProject.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("minDegree")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Course");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 100,
                            DepartmentId = 1,
                            Name = "C#",
                            minDegree = 60
                        },
                        new
                        {
                            Id = 2,
                            Degree = 100,
                            DepartmentId = 1,
                            Name = "Java",
                            minDegree = 60
                        },
                        new
                        {
                            Id = 3,
                            Degree = 100,
                            DepartmentId = 2,
                            Name = "HR",
                            minDegree = 60
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Manager")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Department");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Manager = "Ahmed",
                            Name = "IT"
                        },
                        new
                        {
                            Id = 2,
                            Manager = "Ali",
                            Name = "HR"
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Instructor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("money");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Instructor");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            DepartmentId = 1,
                            ImageURL = "4.jpg",
                            Name = "Mohamed",
                            Salary = 10000m
                        },
                        new
                        {
                            Id = 2,
                            Address = "Giza",
                            DepartmentId = 1,
                            ImageURL = "5.jpg",
                            Name = "Ahmed",
                            Salary = 8000m
                        },
                        new
                        {
                            Id = 3,
                            Address = "Alex",
                            DepartmentId = 2,
                            ImageURL = "6.jpg",
                            Name = "Ali",
                            Salary = 7500m
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Trainee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DepartmentId")
                        .HasColumnType("int");

                    b.Property<int>("Grade")
                        .HasColumnType("int");

                    b.Property<string>("ImageURL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.ToTable("Trainee");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "Cairo",
                            DepartmentId = 1,
                            Grade = 2,
                            ImageURL = "1.jpg",
                            Name = "Abdallah"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Giza",
                            DepartmentId = 1,
                            Grade = 2,
                            ImageURL = "2.jpg",
                            Name = "Shadi"
                        },
                        new
                        {
                            Id = 3,
                            Address = "Alex",
                            DepartmentId = 2,
                            Grade = 3,
                            ImageURL = "3.jpg",
                            Name = "Eslam"
                        });
                });

            modelBuilder.Entity("MVCProject.Models.crsResult", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Degree")
                        .HasColumnType("int");

                    b.Property<int>("TraineeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("TraineeId");

                    b.ToTable("crsResult");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Degree = 50,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 2,
                            Degree = 80,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 3,
                            Degree = 70,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 4,
                            Degree = 90,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 5,
                            Degree = 40,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 6,
                            Degree = 70,
                            TraineeId = 3
                        },
                        new
                        {
                            Id = 7,
                            Degree = 60,
                            TraineeId = 1
                        },
                        new
                        {
                            Id = 8,
                            Degree = 80,
                            TraineeId = 2
                        },
                        new
                        {
                            Id = 9,
                            Degree = 30,
                            TraineeId = 3
                        });
                });

            modelBuilder.Entity("MVCProject.Models.Course", b =>
                {
                    b.HasOne("MVCProject.Models.Department", "Department")
                        .WithMany("Courses")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVCProject.Models.Instructor", b =>
                {
                    b.HasOne("MVCProject.Models.Course", "Course")
                        .WithMany("Instructors")
                        .HasForeignKey("CourseId");

                    b.HasOne("MVCProject.Models.Department", "Department")
                        .WithMany("Instructors")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVCProject.Models.Trainee", b =>
                {
                    b.HasOne("MVCProject.Models.Department", "Department")
                        .WithMany("Trainees")
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");
                });

            modelBuilder.Entity("MVCProject.Models.crsResult", b =>
                {
                    b.HasOne("MVCProject.Models.Course", "Course")
                        .WithMany("crsResults")
                        .HasForeignKey("CourseId");

                    b.HasOne("MVCProject.Models.Trainee", "Trainee")
                        .WithMany("crsResults")
                        .HasForeignKey("TraineeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("MVCProject.Models.Course", b =>
                {
                    b.Navigation("Instructors");

                    b.Navigation("crsResults");
                });

            modelBuilder.Entity("MVCProject.Models.Department", b =>
                {
                    b.Navigation("Courses");

                    b.Navigation("Instructors");

                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("MVCProject.Models.Trainee", b =>
                {
                    b.Navigation("crsResults");
                });
#pragma warning restore 612, 618
        }
    }
}
